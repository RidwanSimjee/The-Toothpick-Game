#BlueJ class context
comment0.target=TheToothpickGame
comment0.text=\r\n\ The\ Toothpick\ Game\ is\ the\ the\ most\ amazing\ game\ EVER\!\r\n\ \r\n\ @author\ Ridwan\ Simjee\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=void\ currentPlayerTakesTurn()
comment10.text=\r\n\ The\ current\ player\ takes\ turn\ method\ determines\ who\ is\ supposed\ to\ be\ going\r\n\ right\ now,\ and\ calls\ the\ appropriate\ method\ to\ make\ that\ happen.\r\n
comment11.params=
comment11.target=void\ player1TakesTurn()
comment11.text=\r\n\ The\ player1TakesTurn\ method\ lets\ player\ 1,\ um,\ take\ a\ turn.\r\n\ \r\n\ Postcondition\:\ \ The\ pile\ of\ toothpicks\ does\ not\ go\ negative.\r\n
comment12.params=
comment12.target=void\ player2TakesTurn()
comment12.text=\r\n\ The\ player2TakesTurn\ method\ lets\ player\ 2,\ well,\ take\ a\ turn.\r\n\ \r\n\ Postcondition\:\ \ The\ pile\ of\ toothpicks\ does\ not\ go\ negative.\r\n
comment13.params=
comment13.target=int\ getRandomChoice()
comment13.text=\r\n\ The\ getRandomChoice\ method\ will\ return\ a\ random\ number\ of\ toothpicks\r\n\ between\ 1\ and\ the\ max\ per\ turn.\ \ It\ will\ also\ never\ pick\ a\ random\r\n\ number\ which\ will\ make\ the\ pile\ go\ negative.\r\n\ \r\n\ @return\ an\ integer\ representing\ a\ randomly\ selected\ amount\ of\ toothpicks\ \r\n\ \ \ \ \ \ \ \ \ from\ 1\ to\ the\ max\ per\ turn\ (inclusive).\ \ The\ number\ returned\ must\r\n\ \ \ \ \ \ \ \ \ also\ NOT\ be\ greater\ than\ the\ number\ of\ toothpicks\ left\ in\ the\ pile.\r\n
comment14.params=
comment14.target=int\ getOptimalChoice()
comment14.text=\r\n\ The\ getOptimalChoice\ method\ will\ return\ the\ number\ of\ toothpicks\ that\r\n\ needs\ to\ be\ taken\ to\ force\ a\ win,\ if\ it\ exists.\r\n\ \r\n\ @return\ an\ integer\ representing\ the\ optimal\ number\ of\ toothpicks\ to\ take\r\n\ \ \ \ \ \ \ \ \ in\ order\ to\ force\ a\ win,\ if\ it\ exists;\r\n\ \ \ \ \ \ \ \ \ this\ will\ return\ -1\ if\ it\ is\ impossible\ to\ force\ a\ win\ at\ this\ time\r\n
comment15.params=
comment15.target=void\ easyComputerTakesTurn()
comment15.text=\r\n\ The\ easyComputerTakesTurn\ method\ will\ always\ take\ a\ random\ number\ of\ \r\n\ toothpicks\ and\ then\ output\ their\ choice\ to\ the\ screen\ after\ calling\r\n\ getEasyTurnDescription.\r\n
comment16.params=toothpicksGrabbed
comment16.target=java.lang.String\ getEasyTurnDescription(int)
comment16.text=\r\n\ getEasyTurnDescription\ will\ return\ a\ randomly\ selected\ String\ showing\r\n\ what\ the\ Easy\ Computer\ decided\ to\ do\ this\ turn.\ \ The\ method\ will\ be\ \r\n\ randomly\ choosing\ from\ at\ least\ four\ different\ possible\ Strings.\r\n\ \r\n\ The\ String\ returned\ will\ reflect\ the\ easy\ computer's\ personality.\ \r\n\ \r\n\ @param\ \ num\ \ an\ integer\ representing\ the\ number\ of\ toothpicks\ which\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ supposed\ to\ be\ taken\ this\ turn\r\n\ @return\ a\ String\ which\ describes\ what\ the\ easy\ computer\ does\ this\ turn\r\n
comment17.params=
comment17.target=void\ mediumComputerTakesTurn()
comment17.text=\r\n\ The\ mediumComputerTakesTurn\ method\ will\ sometimes\ take\ a\ random\ amount\r\n\ of\ toothpicks\ and\ sometimes\ take\ the\ optimal\ amount.\ \ Once\ determined,\r\n\ it\ will\ use\ getMediumTurnDescription\ in\ order\ to\ determine\ what\ to\ \r\n\ print\ to\ the\ screen.\r\n
comment18.params=toothpicksGrabbed
comment18.target=java.lang.String\ getMediumTurnDescription(int)
comment18.text=\r\n\ getMediumTurnDescription\ will\ return\ a\ randomly\ selected\ String\ showing\r\n\ what\ the\ Medium\ Computer\ decided\ to\ do\ this\ turn.\ \ The\ method\ will\ be\ \r\n\ randomly\ choosing\ from\ at\ least\ four\ different\ possible\ Strings.\r\n\ \r\n\ The\ String\ returned\ will\ reflect\ the\ easy\ computer's\ personality.\ \r\n\ \r\n\ @param\ \ num\ \ an\ integer\ representing\ the\ number\ of\ toothpicks\ which\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ supposed\ to\ be\ taken\ this\ turn\r\n\ @return\ a\ String\ which\ describes\ what\ the\ medium\ computer\ does\ this\ turn\r\n
comment19.params=
comment19.target=void\ hardComputerTakesTurn()
comment19.text=\r\n\ The\ hardComputerTakesTurn\ method\ will\ always\ try\ to\ do\ the\ optimal\ choice.\r\n\ \r\n\ Sometimes\ there\ is\ no\ optimal\ choice,\ so\ it\ will\ resort\ to\ a\ random\r\n\ amount\ instead.\ \ \r\n\ \r\n\ Once\ the\ method\ determines\ what\ its\ choice\ is,\ it\ will\ use\ \r\n\ getHardTurnDescription\ in\ order\ to\ determine\ what\ to\ print\ to\ the\ screen.\r\n\ Unlike\ the\ Easy\ Computer\ and\ the\ Medium\ Computer,\ this\ computer\ player\ will\r\n\ know\ whether\ it\ is\ playing\ optimally\ or\ not,\ so\ when\ it\ calls\r\n\ getHardTurnDescription,\ it\ will\ also\ include\ a\ boolean\ variable\ \r\n\ relaying\ whether\ this\ turn\ he\ will\ be\ forcing\ a\ win\ or\ not.\r\n
comment2.params=
comment2.target=void\ displayWelcomeBanner()
comment2.text=\r\n\ The\ displayWelcomeBanner\ method\ should\ be\ your\ take\ on\ a\ welcome\ message.\r\n\ \r\n\ Be\ creative.\r\n
comment20.params=toothpicksGrabbed\ optimalDecision
comment20.target=java.lang.String\ getHardTurnDescription(int,\ boolean)
comment20.text=\r\n\ getHardTurnDescription\ will\ return\ a\ randomly\ selected\ String\ showing\r\n\ what\ the\ Hard\ Computer\ decided\ to\ do\ this\ turn.\r\n\ \r\n\ You\ are\ supposed\ to\ be\ giving\ each\ of\ your\ computer\ skill\ levels\ personality,\r\n\ and\ that\ will\ continue\ here.\r\n\ \r\n\ Unlike\ the\ Easy\ and\ Medium\ computers,\ however,\ we\ are\ building\ in\ a\ little\ \r\n\ extra\ here\ because\ the\ Hard\ computer\ knows\ whether\ or\ not\ it\ is\ forcing\ a\r\n\ win.\ \ \r\n\ \r\n\ The\ computer\ will\ have\ four\ random\ Strings\ to\ choose\ from\ if\ he\ is\ happy,\ \r\n\ and\ four\ random\ Strings\ to\ choose\ from\ if\ happy\ is\ false.\r\n\ \r\n\ You\ get\ to\ have\ creative\ license\ for\ what\ being\ happy\ means\ for\ your\ hard\r\n\ computer.\ \ Will\ it\ gloat?\ \ Trash\ talk?\ \ Be\ smug?\ \ Brush\ you\ off\ like\ you\r\n\ are\ a\ peon?\ \ Be\ nice\ about\ it?\ \ It\ is\ up\ to\ you.\r\n\ \r\n\ Similarly,\ you\ can\ decide\ how\ frustrated,\ indifferent,\ angry,\ etc.\ you\ want\r\n\ your\ Hard\ computer\ to\ be\ if\ he\ is\ having\ to\ choose\ randomly.\r\n\ \r\n\ @param\ \ num\ \ an\ integer\ representing\ the\ number\ of\ toothpicks\ which\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ supposed\ to\ be\ taken\ this\ turn\r\n\ @param\ \ happy\ \ a\ boolean\ representing\ whether\ the\ computer\ is\ happy\ with\ its\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ selection\ this\ turn\ (it\ is\ forcing\ a\ win)\ or\ not\ (it\ had\ to\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pick\ randomly).\r\n\ @return\ a\ String\ which\ describes\ what\ the\ hard\ computer\ does\ this\ turn\r\n
comment21.params=
comment21.target=void\ displayFinalStats()
comment21.text=\r\n\ The\ displayFinalStats\ method\ shows\ the\ results\ of\ the\ series\ of\ games.\r\n
comment22.params=
comment22.target=void\ displayFinalStatsBanner()
comment22.text=\r\n\ The\ displayFinalStatsBanner\ method\ displays\ a\ nice-looking\ banner\ to\ be\ used\ at\ the\ top\r\n\ of\ the\ output\ for\ displayFinalStats.\r\n\ \r\n\ That's\ all.\r\n\ \r\n\ Be\ creative.\r\n
comment3.params=
comment3.target=void\ getStartingInformation()
comment3.text=\r\n\ The\ getStartingInformation\ method,\ um,\ gets\ the\ starting\ information.\r\n\ \r\n\ In\ the\ course\ of\ running,\ setGameParameters\ uses\ three\ helper\r\n\ methods\ --\ choosePlayers(),\ getWinsNeeded(),\ and\ choooseMaxToothpicksPerTurn()\r\n
comment4.params=
comment4.target=void\ choosePlayers()
comment4.text=\r\n\ The\ choosePlayers\ method\ gets\ player\ 1's\ name,\ determines\ whether\ the\ \r\n\ second\ player\ is\ human\ or\ computer.\r\n\ \r\n\ If\ the\ second\ player\ is\ human,\ ask\ for\ their\ name\ and\ set\ that\ variable.\r\n\ \r\n\ If\ the\ second\ player\ is\ a\ computer,\ have\ them\ choose\ a\ skill\ level\ to\ \r\n\ set\ that\ variable,\ and\ then\ set\ player\ 2's\ name\ variable\ to\ be\ the\ name\r\n\ of\ that\ particular\ skill\ level\ for\ the\ computer.\r\n\ \r\n\ Postcondition\:\ \ computerOpponent\ gets\ properly\ set;\ \ \r\n\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ player\ 1's\ name\ and\ player\ 2's\ name\ varaibles\ are\ set\ properly;\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ playing\ against\ a\ computer\ then\ compSkillLevel\ is\ also\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ set\ properly.\r\n
comment5.params=
comment5.target=int\ getWinsNeeded()
comment5.text=\r\n\ The\ getWinsNeeded\ method\ asks\ player\ 1\ how\ many\ games\ they\ are\ playing\r\n\ in\ their\ series,\ and\ returns\ how\ many\ wins\ are\ needed\ for\ one\ player\r\n\ to\ win\ the\ series.\r\n\ \r\n\ @return\ an\ integer\ representing\ the\ number\ of\ wins\ needed\ in\ order\ for\r\n\ \ \ \ \ \ \ \ \ one\ player\ to\ win\ the\ whole\ series\r\n
comment6.params=
comment6.target=void\ chooseMaxToothpicksPerTurn()
comment6.text=\r\n\ The\ chooseMaxToothpicksPerTurn\ method\ asks\ player\ 1\ how\ many\ toothpicks\ will\ be\r\n\ the\ maximum\ number\ that\ they\ can\ choose\ per\ turn,\ or\ whether\ they\r\n\ want\ the\ maximum\ randomly\ determined\ before\ the\ start\ of\ each\ game.\r\n\ \r\n\ Postcondition\:\ \ A\ global\ boolean\ variable\ is\ set\ showing\ whether\ or\ not\ the\ max\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ toothpicks\ per\ turn\ should\ be\ randomly\ determined\ before\ each\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ game.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ A\ global\ max\ toothpicks\ per\ turn\ variable\ is\ set\ with\ the\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ correct\ maximum,\ but\ only\ if\ it\ is\ NOT\ being\ randomly\ determined\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ before\ each\ game.\r\n
comment7.params=
comment7.target=void\ playOneGame()
comment7.text=\r\n\ The\ playOneGame\ method\ plays\ a\ single\ round\ of\ the\ Toothpick\ Game\ from\r\n\ start\ to\ finish.\r\n
comment8.params=
comment8.target=void\ initializeGame()
comment8.text=\r\n\ The\ initializeGame\ method\ will\ get\ a\ Toothpick\ Game\ ready\ to\ go.\r\n\ \r\n\ A\ random\ number\ from\ 20\ to\ 39\ is\ generated\ for\ the\ number\ of\ toothpicks\ remaining.\ \ \r\n\ The\ result\ is\ printed\ to\ the\ screen.\r\n\ \r\n\ A\ coin\ is\ flipped\ to\ see\ who\ will\ go\ first.\ \ The\ result\ of\ the\ coin\ flip\ is\ \r\n\ output\ to\ the\ screen.\r\n\ \r\n\ ***IF***\ they\ have\ chosen\ to\ have\ a\ random\ amount\ of\ max\ toothpicks\ per\ turn,\ \r\n\ then\ that\ value\ needs\ to\ be\ generated\ and\ stored\ in\ the\ correct\ variable.\r\n\ Only\ if\ that\ value\ was\ randomly\ generated\ will\ something\ be\ output\ to\ the\ screen.\r\n\ \r\n\ Postcondition\:\ \ toothpicksRemaining,\ currentPlayer,\ and\ whatever\ you\ named\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ variable\ holding\ the\ maximum\ number\ per\ turn\ are\ all\ properly\ set\r\n
comment9.params=
comment9.target=void\ congratulateWinner()
comment9.text=\r\n\ The\ congratulateWinner\ method\ will\ congratulate\ the\ winner\!\r\n\ \r\n\ Postcondition\:\ \ After\ printing\ to\ the\ screen\ a\ relevant\ congratulations,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ appropriate\ player's\ win\ total\ has\ been\ incremented.\r\n
numComments=23
